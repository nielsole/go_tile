name: Build and test image

on:
  push:
    branches:
    - master
    tags:
    - 'v*'
  pull_request:
    branches:
    - master

# cancel outdated jobs for the same reference
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  IMAGE : ${{ github.repository_owner }}/go_tile
  TAG   : ${{ github.sha }}

jobs:

  test:
    container: golang:1.17-alpine
    runs-on: ubuntu-latest
    steps:
    -
      name: Checkout
      uses: actions/checkout@v3
    - run: CGO_ENABLED=0 go test
  deploy:
    runs-on: ubuntu-latest
    needs:
    - test
    if: ${{ github.event_name != 'pull_request' }}
    steps:
    -
      name: Checkout
      uses: actions/checkout@v3
    -
      name: Docker meta
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: |
          ghcr.io/${{ env.IMAGE }}
        tags: |
          type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
    -
      name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    -
      name: Login to GHCR
      uses: docker/login-action@v1
      with:
        registry : ghcr.io
        username : ${{ github.repository_owner }}
        password : ${{ secrets.GITHUB_TOKEN }}
    -
      name: Build and push
      uses: docker/build-push-action@v2
      with:
        pull       : true
        push       : true
        context    : .
        file       : ./Dockerfile
        tags       : ${{ steps.meta.outputs.tags }}
        labels     : ${{ steps.meta.outputs.labels }}
        cache-from : type=gha,scope=${{ github.workflow }}
        cache-to   : type=gha,scope=${{ github.workflow }},mode=max